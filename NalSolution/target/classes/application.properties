#spring.profiles.active=dev_beach
spring.thymeleaf.cache=false

# Connection url for the database "test"
spring.datasource.url=jdbc:mysql://localhost:3306/nalsolution?useSSL=false

# MySQL username and password
spring.datasource.username=root
spring.datasource.password=abc123456

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.dbcp.test-while-idle=true
spring.datasource.dbcp.validation-query=SELECT 1

# ===============================
# JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql=true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto=update

# Naming strategy
spring.jpa.hibernate.naming.strategy=org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect

# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder  
# ==============================================================
#spring.queries.users-query=select email, password, active from user where email=?
#spring.queries.roles-query=select u.email, r.role from user u inner join role r on(u.role_fk=r.role_id) where u.email=?

spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=5MB

#spring.mail.host=smtp.gmail.com
#spring.mail.port=587
#spring.mail.username=TuanNH21@gmail.com
#spring.mail.password=Nhomaidungquen@1
 
#mail properties
#spring.mail.properties.mail.smtp.auth=true
#spring.mail.properties.mail.smtp.starttls.enable=true
